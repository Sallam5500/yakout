// src/pages/BranchReceive.jsx
import React, { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom";
import {
  collection, addDoc, onSnapshot, serverTimestamp, setDoc, doc,
  query, orderBy            // โญ๏ธ ุฃุถููุง query ู orderBy
} from "firebase/firestore";
import { db } from "../firebase";
import "../GlobalStyles.css";

/* ุฎุฑูุทุฉ ุงููุฑูุน */
const BRANCH_NAMES = { barka: "ุจุฑูุฉ ุงูุณุจุน", qwesna: "ูููุณูุง" };

/* ูุงุฆูุฉ ุฃุตูุงู ุฃุณุงุณูุฉ (ููุง ููุ ุจุฏูู ุชุบููุฑ) */
const BASE_PRODUCTS = [
  "ููุงูู ูุฑููุฉ","ูููุฒุง","ูุฏูุนุฉ","ุตุงุฌ ุนุฒูุฒูู","ุจุณุจูุณุฉ ุณุงุฏู","ุจุณุจูุณุฉ ุจูุฏู",
  "ุฌูุงุด ูุฑููุฉ","ุจุณุจูุณุฉ ูุดุทุฉ","ุจุณุจูุณุฉ ููุชุณ","ููุงูุฉ ูุดุทุฉ","ุฌูุงุด","ุจููุงูุฉ",
  "ุฌูุงุด ุญุฌุงุจ","ุณูุงุฑูุฉ ุณุงุฏู","ุณูุงุฑูุฉ ููุณุฑุงุช","ุจุตูุฉ ุณุงุฏุฉ","ุจุตูุฉ ููุณุฑุงุช","ุจุณููุฉ",
  "ุญุจูุจุฉ","ุฑููุด","ุงุณููุฏุฑุงูู","ููุงูุฉ ุนุด","ุจุตูุฉ ูุงุฌู","ุจูุญ ุณุงุฏู","ุตูุงุจุน ุฒููุจ",
  "ุนุด ููุชููุง","ุนุด ูุงููุฉ","ุตุงุฌ ุฑูุงูู","ุฌูุงุด ุชุฑูู","ููุงูุฉ ูุงุฏุฌ","ููุงูุฉ ุจุณุชุงุดูู",
  "ุจูุญ ูุฑููุฉ","ููุฑููู","ุฏุณุจุงุณูุชู","ุจุฑููุชุฑูู","ูููู ูุฑุจุนู","ุชูุฑุชู ูููู",
  "ุชุดูุฒ ููู","ููุณ ูุดููุฉ","ูุงุฏุฌ","ูููุชุณ","ูุฑุจุนู ููุฑ ุณูุฒูู","ุท26 ููุฑ ุณูุฒูู",
  "ุท24 ููุฑ ุณูุฒูู","ุชูุงุญุฉ ูุต ููุต","ุชูุงุญุฉ R/F","ูุฑุจุนู ูุต ููุต","ูุฑุจุนู R/F",
  "ุท 26 ูุต ููุต","ุท 26 ุฑููุงูุชู","ุท 26 ูุงูููู","ุท 24 ุจูุงู","ุท 20 ูุต ููุต","ุท 20 ุจูุงู",
  "ููุจ ุตููุฑ","ููุณุชูุงู","ูุดุทูุทุฉ","ุฌุงุชูู ุณูุงุฑูู","20*30","ููุณ ุงุจูุถ","ููุณ ูุฑุงูู",
  "ููุณ ุชูุช","ููุณ ููุชุณ","ููุณ ูุฑุงููุฉ","ููุณ ุดููููุงุชุฉ","ููุณ ูุงูุฌุง","ููุณ ูููู",
  "ุฃููุงุจ ูุงููุฉ","ุฃููุงุจ ุดููููุงุชุฉ","ูููุจูุฉ","ูุงุณ ููุณ","ูุงุณุงุช ูุงููุฉ","ููุจูุงุช ุฌููุงุชูู",
  "ุฌุงุชูู ูุจูุฑ","ุฌุงุชูู ุตุบูุฑ","ุงูุชุดููุงุช","ูุงุจ ุชูุช","ููุณ ูุฏูู","ุจููุง","ูุงูู ููู",
  "ุทุจูุงุช 22","30*30","35*35","ูุงูุฌุง ูุณุชุทูู","ููุณ ูุฑูุณูู","ูุงุฑุช ููู","ูุงููุฉ ุฌุฏูุฏ",
  "ูููุด ุฌุฏูุฏ","ุจูุณุชุงุดูู ูุณุชุทูู","ูุจ ุจูุณุชุงุดูู","ุชูุฑุชุฉ ูุงูุฌุง","ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
];

const BranchReceive = () => {
  const navigate = useNavigate();
  const { branchId } = useParams();                       // barka ุฃู qwesna
  const branchName   = BRANCH_NAMES[branchId] || "ูุฑุน ุบูุฑ ูุนุฑูู";

  /* collections */
  const receiveCol = collection(db, `${branchId}_receive`);
  const itemsCol   = collection(db, "items");

  /* state */
  const [productList, setProductList] = useState(BASE_PRODUCTS);
  const [item, setItem]       = useState("");
  const [quantity, setQuantity] = useState("");
  const [unit, setUnit]       = useState("ุนุฏุฏ");
  const [note, setNote]       = useState("");
  const [records, setRecords] = useState([]);

  /* ุชุญููู ุงูุฃุตูุงู ูู ููููุดู items */
  useEffect(() => {
    const unsub = onSnapshot(itemsCol, (snap) => {
      const extra = snap.docs.map((d) => d.id);
      setProductList(
        [...BASE_PRODUCTS, ...extra]
          .filter((v, i, arr) => arr.indexOf(v) === i)   // unique
          .sort()
      );
    });
    return () => unsub();
  }, []);

  /* ุชุญููู ุงูุณุฌู ูุญุธููุง โ ูุฑุชููุจ ุชุตุงุนุฏููุง ุจุงูุชุงุฑูุฎ */
  useEffect(() => {
    const q = query(receiveCol, orderBy("createdAt", "asc"));   // ๐ ูููโฏ1 ุซูโฏ2 ุซูโฏ3โฆ
    const unsub = onSnapshot(q, (snap) => {
      setRecords(snap.docs.map((d) => ({ id: d.id, ...d.data() })));
    });
    return () => unsub();
  }, []);

  /* ุงุฎุชูุงุฑ ุตูู (ูุน ุฅุถุงูุฉ ุฌุฏูุฏ) */
  const handleSelect = async (val) => {
    if (val === "__new") {
      const newProd = prompt("ุงูุชุจ ุงุณู ุงูุตูู ุงูุฌุฏูุฏ:");
      if (newProd) {
        await setDoc(doc(db, "items", newProd), { createdAt: serverTimestamp() });
        setItem(newProd);
      }
    } else {
      setItem(val);
    }
  };

  /* ุญูุธ ุงูุงุณุชูุงู */
  const handleSubmit = async () => {
    if (!item || !quantity) return alert("ูู ูุถูู ุฃุฏุฎู ุงุณู ุงูุตูู ูุงููููุฉ");

    await addDoc(receiveCol, {
      name: item,
      quantity: Number(quantity),
      unit,
      note,
      createdAt: serverTimestamp(),
    });

    setItem(""); setQuantity(""); setUnit("ุนุฏุฏ"); setNote("");
    alert("โ ุชู ุชุณุฌูู ุงูุงุณุชูุงู.");
  };

  /* ุชูุณูู ุงูุทุงุจุน ุงูุฒููู */
  const fmtDate = (ts) =>
    ts?.seconds
      ? new Date(ts.seconds * 1000).toLocaleString("ar-EG", {
          timeZone: "Africa/Cairo",
          day: "2-digit", month: "2-digit", year: "numeric",
          hour: "2-digit", minute: "2-digit",
        })
      : "-";

  /* ---------------- JSX ---------------- */
  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ฅ ุงุณุชูุงู ูู ุงููุตูุน - ูุฑุน {branchName}</h2>

      {/* ูููุฐุฌ ุงูุฅุฏุฎุงู */}
      <div className="form-section">
        <div className="form-row">
          <select value={item} onChange={(e) => handleSelect(e.target.value)} required>
            <option value="">ุงุฎุชุฑ ุงูุตูู</option>
            {[...productList, "__new"].map((p) => (
              <option key={p} value={p}>
                {p === "__new" ? "โ ุฅุถุงูุฉ ุตูู ุฌุฏูุฏโฆ" : p}
              </option>
            ))}
          </select>

          <input
            type="number"
            placeholder="ุงููููุฉ"
            value={quantity}
            onChange={(e) => setQuantity(e.target.value)}
          />

          <select value={unit} onChange={(e) => setUnit(e.target.value)}>
            <option>ุนุฏุฏ</option><option>ุจุฑูููุฉ</option>
            <option>ุณูุฑููุฒ</option><option>ูููู</option><option>ุตุงุฌ</option>
          </select>

          <input
            type="text"
            placeholder="ุจูุงู / ููุงุญุธุงุช"
            value={note}
            onChange={(e) => setNote(e.target.value)}
          />
        </div>
        <button onClick={handleSubmit}>๐พ ุชุณุฌูู ุงูุงุณุชูุงู</button>
      </div>

      {/* ุงูุณุฌู */}
      <h3 className="page-subtitle">๐ ุงูุณุฌู:</h3>
      <table className="styled-table">
        <thead>
          <tr>
            <th>ุงุณู ุงูุตูู</th><th>ุงููููุฉ</th><th>ุงููุญุฏุฉ</th>
            <th>ุงูุจูุงู</th><th>ุงูุชุงุฑูุฎ</th>
          </tr>
        </thead>
        <tbody>
          {records.length === 0 ? (
            <tr><td colSpan="5">ูุง ุชูุฌุฏ ุจูุงูุงุช.</td></tr>
          ) : (
            records.map((r) => (
              <tr key={r.id}>
                <td>{r.name}</td><td>{r.quantity}</td><td>{r.unit}</td>
                <td>{r.note || "-"}</td><td>{fmtDate(r.createdAt)}</td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
};

export default BranchReceive;
