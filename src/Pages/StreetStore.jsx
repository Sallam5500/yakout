// src/pages/StreetStore.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { db } from "../firebase";
import {
  collection, addDoc, onSnapshot,
  deleteDoc, updateDoc, doc, serverTimestamp,
  setDoc, query, orderBy,
} from "firebase/firestore";
import "../GlobalStyles.css";

/* ุชุทุจูุน ุงูุงุณู */
const normalize = (s) => s.trim().replace(/\s+/g, " ").toLowerCase();

/* ุงูุฃุตูุงู ุงูุฃุณุงุณูุฉ */
const BASE_ITEMS = [
  "ุดูุงุฑุฉ ูุฑููู", "ุจุณุจูุณุฉ", "ููุณ ุจูุฏู ูู ุจุณุจูุณุฉ", "ูุฑูุณุฉ", "ุจุณููุฉ",
  "ุญุจูุจู", "ุฑููุด", "ูููุฒุง", "ุฌูุงุด", "ูุดุงุจู", "ุตูุงุจุน", "ุจูุญ",
  "ุนูุจ ูุฑููุฉ", "ูุดุทูุทุฉ", "ูุงุฏุฌ", "ููุณ ูุงูู 1.750 ุฌุฑุงู", "ููุณ ุฌุฑุงูู",
  "ุนุฒูุฒูุฉ", "ุจุณุจูุณุฉ ุชุฑูู", "ุดูุงุฑุฉ ุณูุฏุงูู ููุณุฑ", "ู ุจูุฏู ูู ููุณุฑ",
  "ููุณ ุณูุฏุงูู ุฑูุดูู", "ููุณ ุจูุฏู ูุญูุต 250 ุฌุฑุงู", "ููุณ ุฃูููุฑ",
  "ูุฑุชููุฉ ุจูุฏู ุณููู", "ู ุณูุฑ ุจูุฏุฑู", "ู ุฌูุฒ ููุฏ ูุงุนู", "ู ุณููุฏ",
  "ุฌููุงุชููุฉ", "ู ูุจู ุจูุฏุฑู", "ููุณ ูุจู ุจูุฏุฑู 150 ุฌุฑุงู", "ุดููููุงุชู ุงุณูุฑ",
  "ุดููููุงุชู ุจูุถุงุก", "ูุฑุชููุฉ ุฒูุช", "ุฌุฑูู ุฒูุช", "ูุจุงูู", "ุจุงุณุชุฑู",
  "ูุงูููุง", "ูุงูููู 7ุณู", "ููู ุงุญูุฑ", "ุนูุจ ุทูุจูุฉ", "ูุฑุชููุฉ ุฎููุฑุฉ ููุฑูุฉ",
  "ุณููุฉ ูุฑู", "ูุดุง", "ุณูุฑ", "ุฏููู ุงูุฑุงู", "ูุฌุจุฉ ุจุชู ููุฑ",
  "ุฌูุฒ ููุฏ ูุญูุต", "ููุฒ ูุญูุต ูุฌุฑูุด", "ุฌูุฒ ููุฏ ุงุจูุถ", "ูุฌุจุฉ ุจุณููุช",
  "ุฑุงุจุทุฉ ุญูููุงุช", "ุนูุจ ุจุชู ููุฑ ูุต", "ุนูุจ ุจุณููุช ูุต", "ุนูุจ ุบุฑูุจุฉ ูุต",
  "ุนูุจ ูุนู ุณุงุฏู ูุต", "ุนูุจ ูุนู ููุจู ูุต", "ูุนุจ ุฌุงุชูู",
  "ุฏูุชุฑ ุชุฑูุณููุฑ ุงููุงู", "ููุจู", "ูุฌุจู ุณูุฑุจ", "ุจูุฑ ุงุณุชุฑุชุด",
  "ูุฑู ุณูููุงู ููุณ", "ุนูุจ ุฌุงุชูู ุฏุณุชู", "ุฏูุชุฑ ุชุฑุงูุณููุฑ ุณุงุฏู",
  "ูุฑุชููุฉ ุจููู ุจูุฏุฑ", "ุณุชุงู 2ุณู", "ุฌููู ุดูุงู", "ุฌููู ุณุฎู"
];

const StreetStore = () => {
  const navigate                 = useNavigate();

  // ูุฏุฎูุงุช
  const [name, setName]          = useState("");
  const [newName, setNewName]    = useState("");
  const [quantity, setQty]       = useState("");
  const [unit, setUnit]          = useState("ุนุฏุฏ");

  // ุจูุงูุงุช
  const [items, setItems]        = useState([]);
  const [options, setOptions]    = useState([]);
  const [editId, setEditId]      = useState(null);

  /* ููููุดูุงุช */
  const streetCol = collection(db, "street-store");
  const itemsCol  = collection(db, "items");    // ูุญุชูุธ ุจุฃุณูุงุก ุฃุตูุงู ุงูุดุงุฑุน

  /* ุชุญููู ุฃุตูุงู ุงูุดุงุฑุน + ุงูุฃุณุงุณูุฉ */
  useEffect(() => {
    const unsub = onSnapshot(itemsCol, (snap) => {
      const extra = snap.docs.map((d) => d.id);
      // ยซโ ุฃุถู ุตูู ุฌุฏูุฏโฆยป ุฏุงุฆููุง ุฃูู ุนูุตุฑ
      setOptions(["_NEW_", ...BASE_ITEMS, ...extra].filter(
        (v,i,a) => a.indexOf(v) === i
      ));
    });
    return () => unsub();
  }, []);

  /* ุชุญููู ุจูุงูุงุช ุงููุฎุฒู ุจุชุฑุชูุจ ุซูุงุฆู */
  useEffect(() => {
    const q = query(
      streetCol,
      orderBy("date", "asc"),
      orderBy("createdAt", "asc")
    );
    return onSnapshot(q, (snap) =>
      setItems(snap.docs.map((d) => ({ id: d.id, ...d.data() })))
    );
  }, []);

  /* ุฅุถุงูุฉ / ุชุญุฏูุซ */
  const handleSave = async () => {
    const finalName = name === "_NEW_" ? newName.trim() : name;
    if (!finalName) return alert("ุฃุฏุฎู ุงุณู ุงูุตูู");
    if (!quantity)  return alert("ุฃุฏุฎู ุงููููุฉ");

    // ุฅุญูุธ ุงูุตูู ุงูุฌุฏูุฏ ูู itemsCol
    if (name === "_NEW_") {
      await setDoc(doc(itemsCol, finalName), { createdAt: serverTimestamp() });
    }

    const payload = {
      name: finalName,
      nameKey: normalize(finalName),
      quantity: parseFloat(quantity),
      unit,
    };

    if (editId) {
      const pwd = prompt("ูููุฉ ูุฑูุฑ ุงูุชุนุฏููุ");
      if (pwd !== "2991034") return alert("ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ");
      await updateDoc(doc(streetCol, editId), { ...payload, isEdited: true });
      setEditId(null);
    } else {
      await addDoc(streetCol, {
        ...payload,
        date: new Date().toLocaleDateString("fr-CA"),
        createdAt: serverTimestamp(),
        isEdited: false,
      });
    }

    // ุฅุนุงุฏุฉ ุงูุถุจุท
    setName(""); setNewName(""); setQty(""); setUnit("ุนุฏุฏ");
  };

  /* ุญุฐู */
  const handleDelete = async (id) => {
    if (prompt("ูููุฉ ุงููุฑูุฑุ") !== "2991034") return;
    if (!window.confirm("ุชุฃููุฏ ุงูุญุฐูุ")) return;
    await deleteDoc(doc(streetCol, id));
  };

  /* ุชุญููู ููุชุนุฏูู */
  const handleEdit = (it) => {
    setName(it.name); setNewName("");
    setQty(it.quantity); setUnit(it.unit); setEditId(it.id);
  };

  /* ูุงุฌูุฉ ุงููุณุชุฎุฏู */
  return (
    <div className="page-container" dir="rtl">
      <button className="back-button" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ช ูุฎุฒู ุงูุดุงุฑุน</h2>

      {/* ูููุฐุฌ ุงูุฅุฏุฎุงู */}
      <div className="form-row">
        <select value={name} onChange={(e) => setName(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          <option value="_NEW_">โ ุฃุถู ุตูู ุฌุฏูุฏโฆ</option>
          {options.filter(o => o !== "_NEW_").map((opt) => (
            <option key={opt}>{opt}</option>
          ))}
        </select>

        {name === "_NEW_" && (
          <input
            placeholder="ุงุณู ุงูุตูู ุงูุฌุฏูุฏ"
            value={newName}
            onChange={(e) => setNewName(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQty(e.target.value)}
        />

        <select value={unit} onChange={(e) => setUnit(e.target.value)}>
          <option>ุนุฏุฏ</option><option>ูููู</option><option>ุดูุงุฑุฉ</option>
          <option>ุฌุฑุงู</option><option>ุจุฑููู</option><option>ููุณ</option>
          <option>ุฌุฑุฏู</option>
        </select>

        <button type="button" onClick={handleSave}>
          {editId ? "ุชุญุฏูุซ" : "ุฅุถุงูุฉ"}
        </button>
      </div>

      {/* ุฌุฏูู */}
      <table className="styled-table">
        <thead>
          <tr>
            <th>ุงูุงุณู</th><th>ุงููููุฉ</th><th>ุงููุญุฏุฉ</th>
            <th>ุงูุชุงุฑูุฎ</th><th>ุชุนุฏูู</th><th>ุญุฐู</th>
          </tr>
        </thead>
        <tbody>
          {items.map((it) => (
            <tr key={it.id} style={{ backgroundColor: it.isEdited ? "#ffcccc" : "transparent" }}>
              <td>{it.name}</td><td>{it.quantity}</td><td>{it.unit}</td>
              <td>{it.date}</td>
              <td><button onClick={() => handleEdit(it)}>ุชุนุฏูู</button></td>
              <td><button onClick={() => handleDelete(it.id)}>ุญุฐู</button></td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default StreetStore;
