import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './InventoryPage.css'; // ููุณ ุงูุชุตููู

const OrdersPage = () => {
  const { branchId } = useParams();
  const navigate = useNavigate();

  const branchName = branchId === 'barkasaba' ? 'ุจุฑูุฉ ุงูุณุจุน' : 'ูููุณูุง';
  const storageKey = `${branchId}_orders`;
  const deletePassword = "delete123";

  const [formData, setFormData] = useState({ product: '', quantity: '', unit: 'ุนุฏุฏ', note: '' });
  const [orders, setOrders] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [editIndex, setEditIndex] = useState(null);

  useEffect(() => {
    const saved = localStorage.getItem(storageKey);
    if (saved) {
      setOrders(JSON.parse(saved));
    }
  }, [storageKey]);

  const handleSubmit = (e) => {
    e.preventDefault();

    const newOrder = {
      ...formData,
      date: new Date().toLocaleDateString('ar-EG'),
    };

    let updated;

    if (editIndex !== null) {
      updated = [...orders];
      updated[editIndex] = newOrder;
      setEditIndex(null);
    } else {
      updated = [...orders, newOrder];
    }

    setOrders(updated);
    localStorage.setItem(storageKey, JSON.stringify(updated));
    setFormData({ product: '', quantity: '', unit: 'ุนุฏุฏ', note: '' });
  };

  const handleEdit = (index) => {
    const item = orders[index];
    setFormData({ 
      product: item.product, 
      quantity: item.quantity, 
      unit: item.unit || 'ุนุฏุฏ', 
      note: item.note || '' 
    });
    setEditIndex(index);
  };

  const handleDelete = (index) => {
    const enteredPass = prompt("ุงุฏุฎู ูููุฉ ุงูุณุฑ ูุญุฐู ุงูุทูุจ:");
    if (enteredPass === deletePassword) {
      const updated = orders.filter((_, i) => i !== index);
      setOrders(updated);
      localStorage.setItem(storageKey, JSON.stringify(updated));
      alert("ุชู ุงูุญุฐู ุจูุฌุงุญ");
    } else {
      alert("ูููุฉ ุงูุณุฑ ุบูุฑ ุตุญูุญุฉ");
    }
  };

  const filteredData = orders.filter((item) =>
    item.product.includes(searchTerm) || item.date.includes(searchTerm)
  );

  const productList = [
    "ููุงูู ูุฑููุฉ", "ูููุฒุง", "ูุฏูุนุฉ", "ุตุงุฌ ุนุฒูุฒูู", "ุจุณุจูุณุฉ ุณุงุฏู", "ุจุณุจูุณุฉ ุจูุฏู",
    "ุฌูุงุด ูุฑููุฉ", "ุจุณุจูุณุฉ ูุดุทุฉ", "ุจุณุจูุณุฉ ููุชุณ", "ููุงูุฉ ูุดุทุฉ", "ุฌูุงุด", "ุจููุงูุฉ",
    "ุฌูุงุด ุญุฌุงุจ", "ุณูุงุฑูุฉ ุณุงุฏู", "ุณูุงุฑูุฉ ููุณุฑุงุช", "ุจุตูุฉ ุณุงุฏุฉ", "ุจุตูุฉ ููุณุฑุงุช", "ุจุณููุฉ",
    "ุญุจูุจุฉ", "ุฑููุด", "ุงุณููุฏุฑุงูู", "ููุงูุฉ ุนุด", "ุจุตูุฉ ูุงุฌู", "ุจูุญ ุณุงุฏู", "ุตูุงุจุน ุฒููุจ",
    "ุนุด ููุชููุง", "ุนุด ูุงููุฉ", "ุตุงุฌ ุฑูุงูู", "ุฌูุงุด ุชุฑูู", "ููุงูุฉ ูุงุฏุฌ", "ููุงูุฉ ุจุณุชุงุดูู",
    "ุจูุญ ูุฑููุฉ", "ููุฑููู", "ุฏุณุจุงุณูุชู", "ุจุฑููุชุฑูู", "ูููู ูุฑุจุนู", "ุชูุฑุชู ูููู",
    "ุชุดูุฒ ููู", "ููุณ ูุดููุฉ", "ูุงุฏุฌ", "ูููุชุณ", "ูุฑุจุนู ููุฑ ุณูุฒูู", "ุท26 ููุฑ ุณูุฒูู",
    "ุท24 ููุฑ ุณูุฒูู", "ุชูุงุญุฉ ูุต ููุต", "ุชูุงุญุฉ R/F", "ูุฑุจุนู ูุต ููุต", "ูุฑุจุนู R/F",
    "ุท 26 ูุต ููุต", "ุท 26 ุฑููุงูุชู", "ุท 26 ูุงูููู", "ุท 24 ุจูุงู", "ุท 20 ูุต ููุต", "ุท 20 ุจูุงู",
    "ููุจ ุตููุฑ", "ููุณุชูุงู", "ูุดุทูุทุฉ", "ุฌุงุชูู ุณูุงุฑูู", "20*30", "ููุณ ุงุจูุถ", "ููุณ ูุฑุงูู",
    "ููุณ ุชูุช", "ููุณ ููุชุณ", "ููุณ ูุฑุงููุฉ", "ููุณ ุดููููุงุชุฉ", "ููุณ ูุงูุฌุง", "ููุณ ูููู",
    "ุฃููุงุจ ูุงููุฉ", "ุฃููุงุจ ุดููููุงุชุฉ", "ูููุจูุฉ", "ูุงุณ ููุณ", "ูุงุณุงุช ูุงููุฉ", "ููุจูุงุช ุฌููุงุชูู",
    "ุฌุงุชูู ูุจูุฑ", "ุฌุงุชูู ุตุบูุฑ", "ุงูุชุดููุงุช", "ูุงุจ ุชูุช", "ููุณ ูุฏูู", "ุจููุง", "ูุงูู ููู",
    "ุทุจูุงุช 22", "30*30", "35*35", "ูุงูุฌุง ูุณุชุทูู", "ููุณ ูุฑูุณูู", "ูุงุฑุช ููู", "ูุงููุฉ ุฌุฏูุฏ",
    "ูููุด ุฌุฏูุฏ", "ุจูุณุชุงุดูู ูุณุชุทูู", "ูุจ ุจูุณุชุงุดูู", "ุชูุฑุชุฉ ูุงูุฌุง", "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
  ];

  return (
    <div className="inventory-container">
      <button className="back-button" onClick={() => navigate(-1)}>โ ุฑุฌูุน</button>
      <h2>ุงูุฃูุฑุฏุฑ ุงููููู - ูุฑุน {branchName}</h2>

      <form onSubmit={handleSubmit} className="inventory-form">
        <select
          value={formData.product}
          onChange={(e) => setFormData({ ...formData, product: e.target.value })}
          required
        >
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {productList.map((item, index) => (
            <option key={index} value={item}>{item}</option>
          ))}
        </select>

        <input
          type="number"
          placeholder="ุงููููุฉ ุงููุทููุจุฉ"
          value={formData.quantity}
          onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}
          required
        />

        <select
          value={formData.unit}
          onChange={(e) => setFormData({ ...formData, unit: e.target.value })}
        >
          <option>ุนุฏุฏ</option>
          <option>ุณูุฑููุฒ</option>
          <option>ุจุฑูููุฉ</option>
          <option>ูููู</option>
          <option>ุตุงุฌ</option>
        </select>

        <input
          type="text"
          placeholder="ุจูุงู / ููุงุญุธุงุช"
          value={formData.note}
          onChange={(e) => setFormData({ ...formData, note: e.target.value })}
        />
        <button type="submit">{editIndex !== null ? 'ุชุญุฏูุซ' : 'ุชุณุฌูู ุงูุฃูุฑุฏุฑ'}</button>
      </form>

      <input
        type="text"
        placeholder="ุงุจุญุซ ุจุงุณู ุงูุตูู ุฃู ุงูุชุงุฑูุฎ"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        style={{ width: '100%', padding: '12px', marginBottom: '20px', borderRadius: '8px', border: '1px solid #ccc' }}
      />

      <table className="inventory-table">
        <thead>
          <tr>
            <th>ุงูุชุงุฑูุฎ</th>
            <th>ุงูุตูู</th>
            <th>ุงููููุฉ</th>
            <th>ุงููุญุฏุฉ</th>
            <th>ุงูุจูุงู</th>
            <th>ุฅุฌุฑุงุกุงุช</th>
          </tr>
        </thead>
        <tbody>
          {filteredData.map((item, index) => (
            <tr key={index}>
              <td>{item.date}</td>
              <td>{item.product}</td>
              <td>{item.quantity}</td>
              <td>{item.unit || '-'}</td>
              <td>{item.note || '-'}</td>
              <td>
                <button onClick={() => handleEdit(index)} style={{ marginRight: '8px' }}>โ</button>
                <button onClick={() => handleDelete(index)}>๐</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default OrdersPage;
