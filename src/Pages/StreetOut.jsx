// src/pages/StreetOut.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { db } from "../firebase";
import {
  collection, addDoc, onSnapshot, query, where,
  getDocs, runTransaction, serverTimestamp,
  deleteDoc, doc, setDoc, orderBy,
} from "firebase/firestore";
import "../GlobalStyles.css";

/* ุชุทุจูุน ุงูุงุณู */
const normalize = (s) => s.trim().replace(/\s+/g, " ").toLowerCase();

/* ุงููุงุฆูุฉ ุงูุฃุณุงุณูุฉ (ุงุญุชูุงุทูุฉ) */
const BASE_ITEMS = [
  "ุดูุงุฑุฉ ูุฑููู","ุจุณุจูุณุฉ","ููุณ ุจูุฏู ูู ุจุณุจูุณุฉ","ูุฑูุณุฉ","ุจุณููุฉ","ุญุจูุจู","ุฑููุด",
  "ูููุฒุง","ุฌูุงุด","ูุดุงุจู","ุตูุงุจุน","ุจูุญ","ุนูุจ ูุฑููุฉ","ูุดุทูุทุฉ","ูุงุฏุฌ",
  "ููุณ ูุงูู 1.750 ุฌุฑุงู","ููุณ ุฌุฑุงูู","ุนุฒูุฒูุฉ","ุจุณุจูุณุฉ ุชุฑูู","ุดูุงุฑุฉ ุณูุฏุงูู ููุณุฑ",
  "ู ุจูุฏู ูู ููุณุฑ","ููุณ ุณูุฏุงูู ุฑูุดูู","ููุณ ุจูุฏู ูุญูุต 250 ุฌุฑุงู","ููุณ ุฃูููุฑ",
  "ูุฑุชููุฉ ุจูุฏู ุณููู","ู ุณูุฑ ุจูุฏุฑู","ู ุฌูุฒ ููุฏ ูุงุนู","ู ุณููุฏ","ุฌููุงุชููุฉ","ู ูุจู ุจูุฏุฑู",
  "ููุณ ูุจู ุจูุฏุฑู 150 ุฌุฑุงู","ุดููููุงุชู ุงุณูุฑ","ุดููููุงุชู ุจูุถุงุก","ูุฑุชููุฉ ุฒูุช","ุฌุฑูู ุฒูุช",
  "ูุจุงูู","ุจุงุณุชุฑู","ูุงูููุง","ูุงูููู 7ุณู","ููู ุงุญูุฑ","ุนูุจ ุทูุจูุฉ",
  "ูุฑุชููุฉ ุฎููุฑุฉ ููุฑูุฉ","ุณููุฉ ูุฑู","ูุดุง","ุณูุฑ","ุฏููู ุงูุฑุงู","ูุฌุจุฉ ุจุชู ููุฑ",
  "ุฌูุฒ ููุฏ ูุญูุต","ููุฒ ูุญูุต ูุฌุฑูุด","ุฌูุฒ ููุฏ ุงุจูุถ","ูุฌุจุฉ ุจุณููุช","ุฑุงุจุทุฉ ุญูููุงุช",
  "ุนูุจ ุจุชู ููุฑ ูุต","ุนูุจ ุจุณููุช ูุต","ุนูุจ ุบุฑูุจุฉ ูุต","ุนูุจ ูุนู ุณุงุฏู ูุต",
  "ุนูุจ ูุนู ููุจู ูุต","ูุนุจ ุฌุงุชูู","ุฏูุชุฑ ุชุฑูุณููุฑ ุงููุงู","ููุจู","ูุฌุจู ุณูุฑุจ",
  "ุจูุฑ ุงุณุชุฑุชุด","ูุฑู ุณูููุงู ููุณ","ุนูุจ ุฌุงุชูู ุฏุณุชู","ุฏูุชุฑ ุชุฑุงูุณููุฑ ุณุงุฏู",
  "ูุฑุชููุฉ ุจููู ุจูุฏุฑ","ุณุชุงู 2ุณู","ุฌููู ุดูุงู","ุฌููู ุณุฎู"
];

const StreetOut = () => {
  const navigate = useNavigate();

  // ููุงุฆู ูุญุงูุงุช
  const [itemOptions, setItemOptions] = useState([]);
  const [item, setItem]             = useState("");
  const [customItem, setCustomItem] = useState("");
  const [quantity, setQuantity]     = useState("");
  const [note, setNote]             = useState("");
  const [records, setRecords]       = useState([]);

  /* Collections */
  const outCol   = collection(db, "street-out");
  const storeCol = collection(db, "street-store");
  const itemsCol = collection(db, "items");

  /* ุชุญููู ุฃุตูุงู ุงููุฎุฒู ุซู ุฏูุฌูุง ูุน ุงูุฃุณุงุณูุฉ */
  useEffect(() => {
    // ุฃูููุง: ุฃุตูุงู ุงููุฎุฒู ุจุชุฑุชูุจ ุฅุฏุฎุงููุง (ุงูุฃูุฏู ุฃูููุง)
    const qStore = query(
      storeCol,
      orderBy("date","asc"), orderBy("createdAt","asc")
    );
    const unsubStore = onSnapshot(qStore, (snap) => {
      const storeNames = [];
      snap.docs.forEach((d) => {
        if (!storeNames.includes(d.data().name)) storeNames.push(d.data().name);
      });

      // ุซุงูููุง: ุงูุฃุตูุงู ุงููุถุงูุฉ ูุฏูููุง (itemsCol)
      onSnapshot(itemsCol, (snapExtra) => {
        const extra = snapExtra.docs.map((d) => d.id);
        // ุฏูุฌ: ูุฎุฒู โ ุฅุถุงููุฉ โ ูุงุฆูุฉ ุฃุณุงุณูุฉ ูุงูุตุฉ โ ุฎูุงุฑ ุฌุฏูุฏ
        const merged = [
          ...storeNames,
          ...extra.filter((x) => !storeNames.includes(x)),
          ...BASE_ITEMS.filter((b) => !storeNames.includes(b) && !extra.includes(b)),
          "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
        ];
        setItemOptions(merged);
      });
    });

    return () => unsubStore();
  }, []);

  /* ุณุฌู ุงูุตุงุฏุฑ (ุชุฑุชูุจ ุญุณุจ ููุช ุงูุฅุฏุฎุงู) */
  useEffect(() => {
    const q = query(outCol, orderBy("timestamp", "asc"));
    return onSnapshot(q, (snap) => {
      setRecords(snap.docs.map((d) => ({ id: d.id, ...d.data() })));
    });
  }, []);

  /* ุฅุถุงูุฉ ุงุณู ุฌุฏูุฏ ูููููุดู items */
  const ensureNewItem = async (name) =>
    setDoc(doc(itemsCol, name), { createdAt: serverTimestamp() }, { merge: true });

  /* ุชุณุฌูู ุงูุตุงุฏุฑ ูุน ุฎุตู ุงููุฎุฒู */
  const handleSubmit = async () => {
    const raw  = item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" ? customItem : item;
    const name = raw.trim();
    const qty  = Number(quantity);
    if (!name || !qty) return alert("ุฃุฏุฎู ุงูุงุณู ูุงููููุฉ");

    if (item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ") await ensureNewItem(name);

    const key = normalize(name);

    // ุงุจุญุซ ุนู ุงูุตูู ูู ูุฎุฒู ุงูุดุงุฑุน
    const qStock = query(storeCol, where("nameKey", "==", key));
    const snap   = await getDocs(qStock);
    if (snap.empty) return alert("โ ุงูุตูู ุบูุฑ ููุฌูุฏ ูู ุงููุฎุฒู");

    const stockRef = snap.docs[0].ref;

    try {
      await runTransaction(db, async (trx) => {
        const stockSnap = await trx.get(stockRef);
        const available = stockSnap.data().quantity;
        if (qty > available) throw new Error(`ุงููููุฉ ุบูุฑ ูุงููุฉ (ุงููุชุงุญ ${available})`);

        // ุฎุตู ุงููููุฉ
        trx.update(stockRef, { quantity: available - qty });

        // ุฅุถุงูุฉ ุณุฌู ุงูุตุงุฏุฑ
        trx.set(doc(outCol), {
          name,
          nameKey: key,
          quantity: qty,
          note,
          date: new Date().toLocaleDateString("fr-CA"),
          timestamp: serverTimestamp(),
        });
      });

      alert("โ ุชู ุชุณุฌูู ุงูุตุงุฏุฑ ูุฎุตู ุงููููุฉ");
      setItem(""); setCustomItem(""); setQuantity(""); setNote("");
    } catch (err) {
      alert(`โ ${err.message}`);
    }
  };

  /* ุญุฐู ุณุฌู */
  const handleDelete = async (id) => {
    const pwd = prompt("ูููุฉ ุงููุฑูุฑ ููุญุฐูุ");
    if (pwd !== "2991034") return alert("ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ");
    if (!window.confirm("ุชุฃููุฏ ุงูุญุฐูุ")) return;
    await deleteDoc(doc(outCol, id));
  };

  /* ูุงุฌูุฉ ุงููุณุชุฎุฏู */
  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ค ุงูุตุงุฏุฑ ูู ุงููุฎุฒู (ุฎุตู ุชููุงุฆู)</h2>

      {/* ูููุฐุฌ ุงูุฅุฏุฎุงู */}
      <div className="form-row">
        <select value={item} onChange={(e) => setItem(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {itemOptions.map((opt) => (
            <option key={opt} value={opt}>{opt}</option>
          ))}
        </select>

        {item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" && (
          <input
            placeholder="ุงุณู ุงูุตูู ุงูุฌุฏูุฏ"
            value={customItem}
            onChange={(e) => setCustomItem(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQuantity(e.target.value)}
        />

        <input
          type="text"
          placeholder="ููุงุญุธุงุช"
          value={note}
          onChange={(e) => setNote(e.target.value)}
        />

        <button type="button" onClick={handleSubmit}>โ ุชุณุฌูู</button>
      </div>

      {/* ุฌุฏูู ุงูุตุงุฏุฑ */}
      <h3 className="table-title">๐ ุณุฌู ุงูุตุงุฏุฑ</h3>
      <div className="table-container">
        <table className="styled-table">
          <thead>
            <tr>
              <th>ุงูุตูู</th><th>ุงููููุฉ</th><th>ุงูููุงุญุธุงุช</th>
              <th>ุงูุชุงุฑูุฎ</th><th>ุญุฐู</th>
            </tr>
          </thead>
          <tbody>
            {records.map((r) => (
              <tr key={r.id}>
                <td>{r.name}</td>
                <td>{r.quantity}</td>
                <td>{r.note || "-"}</td>
                <td>{r.date}</td>
                <td>
                  <button className="delete-btn" onClick={() => handleDelete(r.id)}>ุญุฐู</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default StreetOut;
