// src/pages/StreetOut.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { db } from "../firebase";
import {
  collection, addDoc, onSnapshot,
  query, where, getDocs, runTransaction,
  serverTimestamp, deleteDoc, doc, setDoc,
} from "firebase/firestore";
import "../GlobalStyles.css";

/* Normalize */
const normalize = (s) => s.trim().replace(/\s+/g, " ").toLowerCase();

/* ุงููุงุฆูุฉ ุงูุฃุณุงุณูุฉ */
const BASE_ITEMS = [
  "ุดูุงุฑุฉ ูุฑููู","ุจุณุจูุณุฉ","ููุณ ุจูุฏู ูู ุจุณุจูุณุฉ","ูุฑูุณุฉ","ุจุณููุฉ","ุญุจูุจู","ุฑููุด",
  "ูููุฒุง","ุฌูุงุด","ูุดุงุจู","ุตูุงุจุน","ุจูุญ","ุนูุจ ูุฑููุฉ","ูุดุทูุทุฉ",
  "ูุงุฏุฌ","ููุณ ูุงูู 1.750 ุฌุฑุงู","ููุณ ุฌุฑุงูู","ุนุฒูุฒูุฉ","ุจุณุจูุณุฉ ุชุฑูู",
  "ุดูุงุฑุฉ ุณูุฏุงูู ููุณุฑ","ู ุจูุฏู ูู ููุณุฑ","ููุณ ุณูุฏุงูู ุฑูุดูู","ููุณ ุจูุฏู ูุญูุต 250 ุฌุฑุงู","ููุณ ุฃูููุฑ",
  "ูุฑุชููุฉ ุจูุฏู ุณููู","ู ุณูุฑ ุจูุฏุฑู","ู ุฌูุฒ ููุฏ ูุงุนู","ู ุณููุฏ","ุฌููุงุชููุฉ","ู ูุจู ุจูุฏุฑู",
  "ููุณ ูุจู ุจูุฏุฑู 150 ุฌุฑุงู","ุดููููุงุชู ุงุณูุฑ","ุดููููุงุชู ุจูุถุงุก","ูุฑุชููุฉ ุฒูุช","ุฌุฑูู ุฒูุช","ูุจุงูู","ุจุงุณุชุฑู",
  "ูุงูููุง","ูุงูููู 7ุณู","ููู ุงุญูุฑ","ุนูุจ ุทูุจูุฉ","ูุฑุชููุฉ ุฎููุฑุฉ ููุฑูุฉ","ุณููุฉ ูุฑู","ูุดุง","ุณูุฑ","ุฏููู ุงูุฑุงู",
  "ูุฌุจุฉ ุจุชู ููุฑ","ุฌูุฒ ููุฏ ูุญูุต","ููุฒ ูุญูุต ูุฌุฑูุด","ุฌูุฒ ููุฏ ุงุจูุถ","ูุฌุจุฉ ุจุณููุช","ุฑุงุจุทุฉ ุญูููุงุช",
  "ุนูุจ ุจุชู ููุฑ ูุต","ุนูุจ ุจุณููุช ูุต","ุนูุจ ุบุฑูุจุฉ ูุต","ุนูุจ ูุนู ุณุงุฏู ูุต","ุนูุจ ูุนู ููุจู ูุต","ูุนุจ ุฌุงุชูู",
  "ุฏูุชุฑ ุชุฑูุณููุฑ ุงููุงู","ููุจู","ูุฌุจู ุณูุฑุจ","ุจูุฑ ุงุณุชุฑุชุด","ูุฑู ุณูููุงู ููุณ","ุนูุจ ุฌุงุชูู ุฏุณุชู",
  "ุฏูุชุฑ ุชุฑุงูุณููุฑ ุณุงุฏู","ูุฑุชููุฉ ุจููู ุจูุฏุฑ","ุณุชุงู 2ุณู","ุฌููู ุดูุงู","ุฌููู ุณุฎู"
];

const StreetOut = () => {
  const navigate = useNavigate();

  const [itemOptions, setItemOptions] = useState([...BASE_ITEMS, "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"]);
  const [item, setItem]             = useState("");
  const [customItem, setCustomItem] = useState("");
  const [quantity, setQuantity]     = useState("");
  const [note, setNote]             = useState("");
  const [records, setRecords]       = useState([]);

  /* Collections */
  const outCol   = collection(db, "street-out");
  const storeCol = collection(db, "street-store");
  const itemsCol = collection(db, "items");

  /* ุชุญููู ุฃุตูุงู ูุถุงูุฉ */
  useEffect(() => {
    const unsub = onSnapshot(itemsCol, (snap) => {
      const extra = snap.docs.map((d) => d.id);
      setItemOptions([...BASE_ITEMS, ...extra, "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"]
        .filter((v, i, a) => a.indexOf(v) === i).sort());
    });
    return () => unsub();
  }, []);

  /* ุณุฌู ุงูุตุงุฏุฑ */
  useEffect(() => {
    const unsub = onSnapshot(outCol, (snap) => {
      setRecords(snap.docs.map((d) => ({ id: d.id, ...d.data() })));
    });
    return () => unsub();
  }, []);

  /* ุงุฎุชูุงุฑ ุตูู */
  const handleSelect = (val) => setItem(val);

  /* ุฅุถุงูุฉ ุตูู ุฌุฏูุฏ ูู items */
  const ensureNewItem = async (name) =>
    setDoc(doc(db, "items", name), { createdAt: serverTimestamp() }, { merge: true });

  /* ุชุณุฌูู ุงูุตุงุฏุฑ + ุฎุตู ุงููููุฉ */
  const handleSubmit = async () => {
    const raw   = item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" ? customItem : item;
    const name  = raw.trim();
    const key   = normalize(name);
    const qty   = Number(quantity);

    if (!name || !qty) return alert("ุฃุฏุฎู ุงูุงุณู ูุงููููุฉ");

    if (item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ") await ensureNewItem(name);

    const q = query(storeCol, where("nameKey", "==", key));
    const snap = await getDocs(q);

    if (snap.empty) return alert("โ ุงูุตูู ุบูุฑ ููุฌูุฏ ูู ุงููุฎุฒู");

    const stockRef = snap.docs[0].ref;

    try {
      await runTransaction(db, async (trx) => {
        const stockSnap = await trx.get(stockRef);
        const available = stockSnap.data().quantity;

        if (qty > available) throw new Error(`ุงููููุฉ ุบูุฑ ูุงููุฉ (ุงููุชุงุญ ${available})`);

        /* ุฎุตู ุงููุฎุฒูู */
        trx.update(stockRef, { quantity: available - qty });

        /* ุฅุถุงูุฉ ุณุฌู ุงูุตุงุฏุฑ */
        trx.set(doc(outCol), {
          name,
          nameKey: key,
          quantity: qty,
          note,
          date: new Date().toLocaleString("ar-EG", {
            timeZone: "Africa/Cairo",
            day: "2-digit", month: "2-digit", year: "numeric",
            hour: "2-digit", minute: "2-digit",
          }),
          timestamp: serverTimestamp(),
        });
      });

      alert("โ ุชู ุชุณุฌูู ุงูุตุงุฏุฑ ูุฎุตู ุงููููุฉ");
      setItem(""); setCustomItem(""); setQuantity(""); setNote("");
    } catch (err) {
      alert(`โ ${err.message}`);
    }
  };

  const handleDelete = async (id) => {
    const pwd = prompt("ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ ููุญุฐู:");
    if (!["1234","2991034"].includes(pwd)) return alert("ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ");
    if (!window.confirm("ูุชุฃูุฏ ูู ุงูุญุฐูุ")) return;
    await deleteDoc(doc(db, "street-out", id));
  };

  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ค ุงูุตุงุฏุฑ ูู ุงููุฎุฒู (ููุฎุตู ุชููุงุฆููุง)</h2>

      <div className="form-row">
        <select value={item} onChange={(e) => handleSelect(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {itemOptions.map((opt) => <option key={opt} value={opt}>{opt}</option>)}
        </select>

        {item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" && (
          <input
            placeholder="ุฃุฏุฎู ุงุณู ุงูุตูู"
            value={customItem}
            onChange={(e) => setCustomItem(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQuantity(e.target.value)}
        />
        <input
          type="text"
          placeholder="ููุงุญุธุงุช"
          value={note}
          onChange={(e) => setNote(e.target.value)}
        />
        <button className="add-button" onClick={handleSubmit}>โ ุชุณุฌูู</button>
      </div>

      {/* ุฌุฏูู ุงูุตุงุฏุฑ */}
      <h3 className="table-title">๐ ุณุฌู ุงูุตุงุฏุฑ:</h3>
      <div className="table-container">
        <table className="styled-table">
          <thead>
            <tr><th>ุงูุตูู</th><th>ุงููููุฉ</th><th>ุงูููุงุญุธุงุช</th><th>ุงูุชุงุฑูุฎ</th><th>ุญุฐู</th></tr>
          </thead>
          <tbody>
            {records.map((r) => (
              <tr key={r.id}>
                <td>{r.name}</td><td>{r.quantity}</td><td>{r.note || "-"}</td><td>{r.date}</td>
                <td><button className="delete-btn" onClick={() => handleDelete(r.id)}>ุญุฐู</button></td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default StreetOut;
