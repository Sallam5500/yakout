// src/pages/StreetOut.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { db } from "../firebase";
import {
  collection,
  addDoc,
  onSnapshot,
  query,
  where,
  getDocs,
  serverTimestamp,
  deleteDoc,
  doc,
} from "firebase/firestore";
import "../GlobalStyles.css";

const StreetOut = () => {
  const [item, setItem] = useState("");
  const [customItem, setCustomItem] = useState("");
  const [quantity, setQuantity] = useState("");
  const [note, setNote] = useState("");
  const [records, setRecords] = useState([]);
  const navigate = useNavigate();

  const itemOptions = [
    "ุดูุงุฑุฉ ูุฑููู", "ุจุณุจูุณุฉ", "ููุณ ุจูุฏู ูู ุจุณุจูุณุฉ", "ูุฑูุณุฉ", "ุจุณููุฉ", "ุญุจูุจู", "ุฑููุด",
    "ูููุฒุง", "ุฌูุงุด", "ูุดุงุจู", "ุตูุงุจุน", "ุจูุญ", "ุนูุจ ูุฑููุฉ", "ูุดุทูุทุฉ",
    "ูุงุฏุฌ", "ููุณ ูุงูู1.750ุฌุฑุงู", "ููุณ ุฌุฑุงูู", "ุนุฒูุฒูุฉ", "ุจุณุจูุณุฉ ุชุฑูู",
    "ุดูุงุฑุฉ ุณูุฏุงูู ููุณุฑ", "ู ุจูุฏู ูู ููุณุฑ", "ููุณ ุณูุฏุงูู ุฑูุดูู", "ููุณ ุจูุฏู ูุญูุต250ุฌุฑุงู", "ููุณ ุฃูููุฑ",
    "ูุฑุชููุฉ ุจูุฏู ุณููู", "ู ุณูุฑ ุจูุฏุฑู", "ู ุฌูุฒ ููุฏ ูุงุนู", "ู ุณููุฏ", "ุฌููุงุชููุฉ", "ู ูุจู ุจูุฏุฑู",
    "ููุณ ูุจู ุจูุฏุฑู 150 ุฌุฑุงู", "ุดููููุงุชู ุงุณูุฑ", "ุดููููุงุชู ุจูุถุงุก", "ูุฑุชููุฉ ุฒูุช", "ุฌุฑูู ุฒูุช", "ูุจุงูู", "ุจุงุณุชุฑู",
    "ูุงูููุง", "ูุงูููู 7ุณู", "ููู ุงุญูุฑ", "ุนูุจ ุทูุจูุฉ", "ูุฑุชููุฉ ุฎููุฑุฉ ููุฑูุฉ", "ุณููุฉ ูุฑู", "ูุดุง", "ุณูุฑ", "ุฏููู ุงูุฑุงู",
    "ูุฌุจุฉ ุจุชู ููุฑ", "ุฌูุฒ ููุฏ ูุญูุต", "ููุฒ ูุญูุต ูุฌุฑูุด", "ุฌูุฒ ููุฏ ุงุจูุถ", "ูุฌุจุฉ ุจุณููุช", "ุฑุงุจุทุฉ ุญูููุงุช",
    "ุนูุจ ุจุชู ููุฑ ูุต", "ุนูุจ ุจุณููุช ูุต", "ุนูุจ ุบุฑูุจุฉ ูุต", "ุนูุจ ูุนู ุณุงุฏู ูุต", "ุนูุจ ูุนู ููุจู ูุต", "ูุนุจ ุฌุงุชูู",
    "ุฏูุชุฑ ุชุฑูุณููุฑ ุงููุงู", "ููุจู", "ูุฌุจู ุณูุฑุจ", "ุจูุฑ ุงุณุชุฑุชุด", "ูุฑู ุณูููุงู ููุณ", "ุนูุจ ุฌุงุชูู ุฏุณุชู",
    "ุฏูุชุฑ ุชุฑุงูุณููุฑ ุณุงุฏู", "ูุฑุชููุฉ ุจููู ุจูุฏุฑ", "ุณุชุงู 2ุณู", "ุฌููู ุดูุงู", "ุฌููู ุณุฎู", "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
  ];

  const streetOutRef = collection(db, "street-out");

  // ูุฑุงุกุฉ ุจูุงูุงุช ุงูุตุงุฏุฑ ูู Firestore
  useEffect(() => {
    const unsubscribe = onSnapshot(streetOutRef, (snapshot) => {
      const data = snapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      setRecords(data);
    });
    return () => unsubscribe();
  }, []);

  const handleSubmit = async () => {
    const finalItem = item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" ? customItem.trim() : item.trim();

    if (!finalItem || !quantity) {
      alert("ูู ูุถูู ุฃุฏุฎู ุงุณู ุงูุตูู ูุงููููุฉ");
      return;
    }

    // ุงูุชุฃูุฏ ูู ุชููุฑ ุงูุตูู ูุงููููุฉ ูู ุงููุฎุฒู
    const stockRef = collection(db, "street-store");
    const q = query(stockRef, where("name", "==", finalItem));
    const snapshot = await getDocs(q);

    if (snapshot.empty) {
      alert("โ ูุฐุง ุงูุตูู ุบูุฑ ููุฌูุฏ ูู ุงููุฎุฒู.");
      return;
    }

    const stockDoc = snapshot.docs[0];
    const availableQty = stockDoc.data().quantity;

    if (Number(quantity) > availableQty) {
      alert(`โ ุงููููุฉ ุบูุฑ ูุงููุฉ. ุงููุชุงุญ: ${availableQty}`);
      return;
    }

    // ุชุณุฌูู ุงูุตุงุฏุฑ ููุท ุจุฏูู ุฎุตู ูุนูู
    await addDoc(streetOutRef, {
      name: finalItem,
      quantity: Number(quantity),
      note,
      date: new Date().toLocaleString("ar-EG", {
        timeZone: "Africa/Cairo",
        day: "2-digit",
        month: "2-digit",
        year: "numeric",
        hour: "2-digit",
        minute: "2-digit",
      }),
      timestamp: serverTimestamp(),
    });

    alert("โ ุชู ุชุณุฌูู ุงูุตุงุฏุฑ ุจูุฌุงุญ.");
    setItem("");
    setCustomItem("");
    setQuantity("");
    setNote("");
  };

  const handleDelete = async (id) => {
    const password = prompt("ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ ููุญุฐู:");
    if (password !== "1234" && password !== "2991034") {
      alert("โ ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ.");
      return;
    }

    const confirm = window.confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุงูุญุฐูุ");
    if (!confirm) return;

    await deleteDoc(doc(db, "street-out", id));
    alert("โ ุชู ุงูุญุฐู.");
  };

  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ค ุงูุตุงุฏุฑ ูู ุงููุฎุฒู</h2>

      <div className="form-row">
        <select value={item} onChange={(e) => setItem(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {itemOptions.map((i, idx) => (
            <option key={idx} value={i}>{i}</option>
          ))}
        </select>

        {item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" && (
          <input
            type="text"
            placeholder="ุฃุฏุฎู ุงุณู ุงูุตูู"
            value={customItem}
            onChange={(e) => setCustomItem(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQuantity(e.target.value)}
        />
        <input
          type="text"
          placeholder="ุงูุจูุงู / ููุงุญุธุงุช"
          value={note}
          onChange={(e) => setNote(e.target.value)}
        />
        <button className="add-button" onClick={handleSubmit}>
          โ ุชุณุฌูู
        </button>
      </div>

      <h3 className="table-title">๐ ุณุฌู ุงูุตุงุฏุฑ:</h3>
      <div className="table-container">
        <table className="styled-table">
          <thead>
            <tr>
              <th>ุงุณู ุงูุตูู</th>
              <th>ุงููููุฉ</th>
              <th>ุงูุจูุงู</th>
              <th>ุงูุชุงุฑูุฎ</th>
              <th>ุญุฐู</th>
            </tr>
          </thead>
          <tbody>
            {records.map((rec) => (
              <tr key={rec.id}>
                <td>{rec.name}</td>
                <td>{rec.quantity}</td>
                <td>{rec.note}</td>
                <td>{rec.date}</td>
                <td>
                  <button className="delete-btn" onClick={() => handleDelete(rec.id)}>ุญุฐู</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default StreetOut;
