import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "../GlobalStyles.css";

const TruckReceive = () => {
  const [items, setItems] = useState([]);
  const [name, setName] = useState("");
  const [customName, setCustomName] = useState("");
  const [quantity, setQuantity] = useState("");
  const [unit, setUnit] = useState("ุจุฑูููุฉ");
  const [searchTerm, setSearchTerm] = useState("");
  const navigate = useNavigate();

  // ูุงุฆูุฉ ุงูุฃุตูุงู
  const itemOptions = [
    "ููุงูู ูุฑููุฉ", "ูููุฒุง", "ูุฏูุนุฉ", "ุตุงุฌ ุนุฒูุฒูู", "ุจุณุจูุณุฉ ุณุงุฏู", "ุจุณุจูุณุฉ ุจูุฏู",
    "ุฌูุงุด ูุฑููุฉ", "ุจุณุจูุณุฉ ูุดุทุฉ", "ุจุณุจูุณุฉ ููุชุณ", "ููุงูุฉ ูุดุทุฉ", "ุฌูุงุด", "ุจููุงูุฉ",
    "ุฌูุงุด ุญุฌุงุจ", "ุณูุงุฑูุฉ ุณุงุฏู", "ุณูุงุฑูุฉ ููุณุฑุงุช", "ุจุตูุฉ ุณุงุฏุฉ", "ุจุตูุฉ ููุณุฑุงุช", "ุจุณููุฉ",
    "ุญุจูุจุฉ", "ุฑููุด", "ุงุณููุฏุฑุงูู", "ููุงูุฉ ุนุด", "ุจุตูุฉ ูุงุฌู", "ุจูุญ ุณุงุฏู", "ุตูุงุจุน ุฒููุจ",
    "ุนุด ููุชููุง", "ุนุด ูุงููุฉ", "ุตุงุฌ ุฑูุงูู", "ุฌูุงุด ุชุฑูู", "ููุงูุฉ ูุงุฏุฌ", "ููุงูุฉ ุจุณุชุงุดูู",
    "ุจูุญ ูุฑููุฉ", "ููุฑููู", "ุฏุณุจุงุณูุชู", "ุจุฑููุชุฑูู", "ูููู ูุฑุจุนู", "ุชูุฑุชู ูููู",
    "ุชุดูุฒ ููู", "ููุณ ูุดููุฉ", "ูุงุฏุฌ", "ูููุชุณ", "ูุฑุจุนู ููุฑ ุณูุฒูู", "ุท26 ููุฑ ุณูุฒูู",
    "ุท24 ููุฑ ุณูุฒูู", "ุชูุงุญุฉ ูุต ููุต", "ุชูุงุญุฉ R/F", "ูุฑุจุนู ูุต ููุต", "ูุฑุจุนู R/F",
    "ุท 26 ูุต ููุต", "ุท 26 ุฑููุงูุชู", "ุท 26 ูุงูููู", "ุท 24 ุจูุงู", "ุท 20 ูุต ููุต", "ุท 20 ุจูุงู",
    "ููุจ ุตููุฑ", "ููุณุชูุงู", "ูุดุทูุทุฉ", "ุฌุงุชูู ุณูุงุฑูู", "20*30", "ููุณ ุงุจูุถ", "ููุณ ูุฑุงูู",
    "ููุณ ุชูุช", "ููุณ ููุชุณ", "ููุณ ูุฑุงููุฉ", "ููุณ ุดููููุงุชุฉ", "ููุณ ูุงูุฌุง", "ููุณ ูููู",
    "ุฃููุงุจ ูุงููุฉ", "ุฃููุงุจ ุดููููุงุชุฉ", "ูููุจูุฉ", "ูุงุณ ููุณ", "ูุงุณุงุช ูุงููุฉ", "ููุจูุงุช ุฌููุงุชูู",
    "ุฌุงุชูู ูุจูุฑ", "ุฌุงุชูู ุตุบูุฑ", "ุงูุชุดููุงุช", "ูุงุจ ุชูุช", "ููุณ ูุฏูู", "ุจููุง", "ูุงูู ููู",
    "ุทุจูุงุช 22", "30*30", "35*35", "ูุงูุฌุง ูุณุชุทูู", "ููุณ ูุฑูุณูู", "ูุงุฑุช ููู", "ูุงููุฉ ุฌุฏูุฏ",
    "ูููุด ุฌุฏูุฏ", "ุจูุณุชุงุดูู ูุณุชุทูู", "ูุจ ุจูุณุชุงุดูู", "ุชูุฑุชุฉ ูุงูุฌุง", "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
  ];

  useEffect(() => {
    const stored = localStorage.getItem("truckReceive");
    if (stored) {
      setItems(JSON.parse(stored));
    }
  }, []);

  useEffect(() => {
    localStorage.setItem("truckReceive", JSON.stringify(items));
  }, [items]);

  const handleAdd = () => {
    const finalName = name === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" ? customName.trim() : name.trim();

    if (!finalName || !quantity) {
      alert("ูุฑุฌู ุฅุฏุฎุงู ุงุณู ุงูุตูู ูุงููููุฉ.");
      return;
    }

    const date = new Date().toLocaleDateString("fr-CA");
    const newItem = {
      name: finalName,
      quantity: parseInt(quantity),
      unit,
      date,
      updated: false
    };
    setItems([...items, newItem]);

    setName("");
    setCustomName("");
    setQuantity("");
    setUnit("ุจุฑูููุฉ");
  };

  const handleDelete = (index) => {
    const password = prompt("ุงุฏุฎู ูููุฉ ุงููุฑูุฑ ูุญุฐู ุงูุตูู:");
    if (password === "1234" || password === "2991034") {
      const updated = [...items];
      updated.splice(index, 1);
      setItems(updated);
    } else {
      alert("ูููุฉ ุงููุฑูุฑ ุฎุงุทุฆุฉ.");
    }
  };

  const handleEdit = (index) => {
    const password = prompt("ุงุฏุฎู ูููุฉ ุงููุฑูุฑ ูุชุนุฏูู ุงูุตูู:");
    if (password !== "1234" && password !== "2991034") {
      alert("ูููุฉ ุงููุฑูุฑ ุฎุงุทุฆุฉ.");
      return;
    }

    const currentItem = items[index];
    const newName = prompt("ุงุณู ุงูุตูู ุงูุฌุฏูุฏ:", currentItem.name);
    const newQuantity = prompt("ุงููููุฉ ุงูุฌุฏูุฏุฉ:", currentItem.quantity);
    const newUnit = prompt("ุงููุญุฏุฉ ุงูุฌุฏูุฏุฉ:", currentItem.unit);

    if (!newName || !newQuantity || !newUnit) {
      alert("ูู ูุชู ุชุนุฏูู ุงูุจูุงูุงุช.");
      return;
    }

    const updated = [...items];
    updated[index] = {
      ...currentItem,
      name: newName,
      quantity: parseInt(newQuantity),
      unit: newUnit,
      updated: true
    };
    setItems(updated);
  };

  const filteredItems = items.filter(
    (item) =>
      item.name.includes(searchTerm.trim()) || item.date.includes(searchTerm.trim())
  );

  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ญ ุงุณุชูุงู ุจุถุงุนุฉ ูู ุงููุตูุน</h2>
      <button className="print-btn" onClick={() => window.print()}>๐จ๏ธ ุทุจุงุนุฉ</button>

      <div className="form-row">
        <select value={name} onChange={(e) => setName(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {itemOptions.map((item, idx) => (
            <option key={idx} value={item}>
              {item}
            </option>
          ))}
        </select>

        {name === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" && (
          <input
            type="text"
            placeholder="ุฃุฏุฎู ุงุณู ุงูุตูู"
            value={customName}
            onChange={(e) => setCustomName(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQuantity(e.target.value)}
        />

        <select value={unit} onChange={(e) => setUnit(e.target.value)}>
          <option value="ุจุฑูููุฉ">ุจุฑูููุฉ</option>
          <option value="ุตุงุฌ">ุตุงุฌ</option>
          <option value="ุนุฏุฏ">ุนุฏุฏ</option>
          <option value="ูููู">ูููู</option>
          <option value="ุณูุฑููุฒ">ุณูุฑููุฒ</option>
          <option value="ุจูุงูู">ุจูุงูู</option>
        </select>

        <button className="add-button" onClick={handleAdd}>ุชุณุฌูู ุงุณุชูุงู</button>
      </div>

      <input
        type="text"
        className="search"
        placeholder="ุจุญุซ ุจุงูุงุณู ุฃู ุงูุชุงุฑูุฎ"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        style={{
          padding: "10px",
          borderRadius: "6px",
          border: "none",
          marginBottom: "15px",
          fontSize: "16px",
          width: "300px",
          textAlign: "center"
        }}
      />

      <table className="styled-table">
        <thead>
          <tr>
            <th>ุงูุชุงุฑูุฎ</th>
            <th>ุงูุตูู</th>
            <th>ุงููููุฉ</th>
            <th>ุงููุญุฏุฉ</th>
            <th>ุฅุฌุฑุงุกุงุช</th>
          </tr>
        </thead>
        <tbody>
          {filteredItems.length === 0 ? (
            <tr><td colSpan="5">ูุง ุชูุฌุฏ ุจูุงูุงุช.</td></tr>
          ) : (
            filteredItems.map((item, index) => (
              <tr key={index} className={item.updated ? "edited-row" : ""}>
                <td>{item.date}</td>
                <td>{item.name}</td>
                <td>{item.quantity}</td>
                <td>{item.unit}</td>
                <td>
                  <button className="edit-btn" onClick={() => handleEdit(index)}>โ๏ธ</button>{" "}
                  <button className="delete-btn" onClick={() => handleDelete(index)}>๐๏ธ</button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
};

export default TruckReceive;
