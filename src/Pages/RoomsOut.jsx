// src/pages/RoomsOut.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { db } from "../firebase";
import {
  collection,
  addDoc,
  onSnapshot,
  query,
  where,
  getDocs,
  serverTimestamp,
  deleteDoc,
  doc,
} from "firebase/firestore";
import "../GlobalStyles.css";

const RoomsOut = () => {
  const [item, setItem] = useState("");
  const [customItem, setCustomItem] = useState("");
  const [quantity, setQuantity] = useState("");
  const [note, setNote] = useState("");
  const [records, setRecords] = useState([]);
  const navigate = useNavigate();

  const itemOptions = [
    "ุจูุถ","ูุงูุฌุง ูููุช","ูุฑููุฉ ูููุช","ูููู ูููุช","ูุฑุจู ูุดูุด","ูุจุงูู",
    "ุฌุจูู ุชุดูุฒ ููู","ุฑููุงูุชู ุงุจูุถ","ุฑููุงูุชู ุงุณูุฑ","ุจุดุฑ ุงุณูุฑ","ุจุดุฑ ุงุจูุถ",
    "ููุชุณ","ููุชููุง","ุฌูุงุด ุฌุฏูุฏ","ุฌูุงุด","ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
  ];

  // Collections
  const roomsStoreRef = collection(db, "rooms-store");
  const roomsOutRef   = collection(db, "rooms-out");

  // ูุฑุงุกุฉ ุงูุณุฌูุงุช ูุญุธูููุง
  useEffect(() => {
    const unsub = onSnapshot(roomsOutRef, (snap) => {
      const data = snap.docs.map((d) => ({ id: d.id, ...d.data() }));
      setRecords(data);
    });
    return () => unsub();
  }, []);

  // ุฅุถุงูุฉ ุณุฌู ุฎุฑูุฌ
  const handleSubmit = async () => {
    const finalItem = item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" ? customItem.trim() : item.trim();

    if (!finalItem || !quantity) {
      alert("ูู ูุถูู ุฃุฏุฎู ุงุณู ุงูุตูู ูุงููููุฉ");
      return;
    }

    // 1) ุชุญููู ูู ุชููุฑ ุงูุตูู ูุงููููุฉ
    const q = query(roomsStoreRef, where("name", "==", finalItem));
    const snap = await getDocs(q);

    if (snap.empty) {
      alert("โ ูุฐุง ุงูุตูู ุบูุฑ ููุฌูุฏ ูู ูุณู ุงูุบุฑู.");
      return;
    }

    const stockDoc = snap.docs[0];
    const available = stockDoc.data().quantity;
    if (Number(quantity) > available) {
      alert(`โ ุงููููุฉ ุบูุฑ ูุงููุฉ. ุงููุชุงุญ: ${available}`);
      return;
    }

    // 2) ุฃุถู ุณุฌู ุงูุตุงุฏุฑ (ุจุฏูู ุฎุตู ูุนูู)
    await addDoc(roomsOutRef, {
      name: finalItem,
      quantity: Number(quantity),
      note,
      date: new Date().toLocaleString("ar-EG", {
        timeZone: "Africa/Cairo",
        day: "2-digit",
        month: "2-digit",
        year: "numeric",
        hour: "2-digit",
        minute: "2-digit",
      }),
      timestamp: serverTimestamp(),
    });

    alert("โ ุชู ุชุณุฌูู ุงูุตุงุฏุฑ ุจูุฌุงุญ.");
    setItem("");
    setCustomItem("");
    setQuantity("");
    setNote("");
  };

  // ุญุฐู ุณุฌู ุฎุฑูุฌ
  const handleDelete = async (id) => {
    const password = prompt("ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ ููุญุฐู:");
    if (password !== "1234" && password !== "2991034") {
      alert("โ ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ.");
      return;
    }
    const confirm = window.confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุงูุญุฐูุ");
    if (!confirm) return;

    await deleteDoc(doc(db, "rooms-out", id));
    alert("โ ุชู ุงูุญุฐู.");
  };

  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ค ุงูุตุงุฏุฑ ูู ุงูุบุฑู</h2>

      <div className="form-row">
        <select value={item} onChange={(e) => setItem(e.target.value)}>
          <option value="">ุงุฎุชุฑ ุงูุตูู</option>
          {itemOptions.map((opt, idx) => (
            <option key={idx} value={opt}>{opt}</option>
          ))}
        </select>

        {item === "ุฃุฏุฎู ุตูู ุฌุฏูุฏ" && (
          <input
            type="text"
            placeholder="ุงุณู ุงูุตูู ุงูุฌุฏูุฏ"
            value={customItem}
            onChange={(e) => setCustomItem(e.target.value)}
          />
        )}

        <input
          type="number"
          placeholder="ุงููููุฉ"
          value={quantity}
          onChange={(e) => setQuantity(e.target.value)}
        />
        <input
          type="text"
          placeholder="ุงูุจูุงู / ููุงุญุธุงุช"
          value={note}
          onChange={(e) => setNote(e.target.value)}
        />
        <button className="add-button" onClick={handleSubmit}>โ ุชุณุฌูู</button>
      </div>

      <h3 className="table-title">๐ ุณุฌู ุงูุตุงุฏุฑ:</h3>
      <div className="table-container">
        <table className="styled-table">
          <thead>
            <tr>
              <th>ุงุณู ุงูุตูู</th>
              <th>ุงููููุฉ</th>
              <th>ุงูุจูุงู</th>
              <th>ุงูุชุงุฑูุฎ</th>
              <th>ุญุฐู</th>
            </tr>
          </thead>
          <tbody>
            {records.map((rec) => (
              <tr key={rec.id}>
                <td>{rec.name}</td>
                <td>{rec.quantity}</td>
                <td>{rec.note}</td>
                <td>{rec.date}</td>
                <td>
                  <button className="delete-btn" onClick={() => handleDelete(rec.id)}>ุญุฐู</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default RoomsOut;
