// src/pages/InventoryPage.jsx
import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import {
  collection,
  addDoc,
  onSnapshot,
  deleteDoc,
  updateDoc,
  doc,
  setDoc,
  query,
  orderBy,               // โญ๏ธ ูุถุงู
} from "firebase/firestore";
import { db } from "../firebase";
import "../GlobalStyles.css";

/* ุฎุฑูุทุฉ ุฃุณูุงุก ุงููุฑูุน */
const BRANCH_NAMES = {
  barka: "ุจุฑูุฉ ุงูุณุจุน",
  qwesna: "ูููุณูุง",
};
/* ูููุงุช ูุฑูุฑ ุงูุญุฐู/ุงูุชุนุฏูู */
const PASS = ["1234", "2991034"];

/* ุงููุงุฆูุฉ ุงูุฃุณุงุณูุฉ */
const BASE_PRODUCTS = [
   "ููุงูู ูุฑููุฉ", "ูููุฒุง", "ูุฏูุนุฉ", "ุตุงุฌ ุนุฒูุฒูู", "ุจุณุจูุณุฉ ุณุงุฏู", "ุจุณุจูุณุฉ ุจูุฏู",
    "ุฌูุงุด ูุฑููุฉ", "ุจุณุจูุณุฉ ูุดุทุฉ", "ุจุณุจูุณุฉ ููุชุณ", "ููุงูุฉ ูุดุทุฉ", "ุฌูุงุด", "ุจููุงูุฉ",
    "ุฌูุงุด ุญุฌุงุจ", "ุณูุงุฑูุฉ ุณุงุฏู", "ุณูุงุฑูุฉ ููุณุฑุงุช", "ุจุตูุฉ ุณุงุฏุฉ", "ุจุตูุฉ ููุณุฑุงุช", "ุจุณููุฉ",
    "ุญุจูุจุฉ", "ุฑููุด", "ุงุณููุฏุฑุงูู", "ููุงูุฉ ุนุด", "ุจุตูุฉ ูุงุฌู", "ุจูุญ ุณุงุฏู", "ุตูุงุจุน ุฒููุจ",
    "ุนุด ููุชููุง", "ุนุด ูุงููุฉ", "ุตุงุฌ ุฑูุงูู", "ุฌูุงุด ุชุฑูู", "ููุงูุฉ ูุงุฏุฌ", "ููุงูุฉ ุจุณุชุงุดูู",
    "ุจูุญ ูุฑููุฉ", "ููุฑููู", "ุฏุณุจุงุณูุชู", "ุจุฑููุชุฑูู", "ูููู ูุฑุจุนู", "ุชูุฑุชู ูููู",
    "ุชุดูุฒ ููู", "ููุณ ูุดููุฉ", "ูุงุฏุฌ", "ูููุชุณ", "ูุฑุจุนู ููุฑ ุณูุฒูู", "ุท26 ููุฑ ุณูุฒูู",
    "ุท24 ููุฑ ุณูุฒูู", "ุชูุงุญุฉ ูุต ููุต", "ุชูุงุญุฉ R/F", "ูุฑุจุนู ูุต ููุต", "ูุฑุจุนู R/F",
    "ุท 26 ูุต ููุต", "ุท 26 ุฑููุงูุชู", "ุท 26 ูุงูููู", "ุท 24 ุจูุงู", "ุท 20 ูุต ููุต", "ุท 20 ุจูุงู",
    "ููุจ ุตููุฑ", "ููุณุชูุงู", "ูุดุทูุทุฉ", "ุฌุงุชูู ุณูุงุฑูู", "20*30", "ููุณ ุงุจูุถ", "ููุณ ูุฑุงูู",
    "ููุณ ุชูุช", "ููุณ ููุชุณ", "ููุณ ูุฑุงููุฉ", "ููุณ ุดููููุงุชุฉ", "ููุณ ูุงูุฌุง", "ููุณ ูููู",
    "ุฃููุงุจ ูุงููุฉ", "ุฃููุงุจ ุดููููุงุชุฉ", "ูููุจูุฉ", "ูุงุณ ููุณ", "ูุงุณุงุช ูุงููุฉ", "ููุจูุงุช ุฌููุงุชูู",
    "ุฌุงุชูู ูุจูุฑ", "ุฌุงุชูู ุตุบูุฑ", "ุงูุชุดููุงุช", "ูุงุจ ุชูุช", "ููุณ ูุฏูู", "ุจููุง", "ูุงูู ููู",
    "ุทุจูุงุช 22", "30*30", "35*35", "ูุงูุฌุง ูุณุชุทูู", "ููุณ ูุฑูุณูู", "ูุงุฑุช ููู", "ูุงููุฉ ุฌุฏูุฏ",
    "ูููุด ุฌุฏูุฏ", "ุจูุณุชุงุดูู ูุณุชุทูู", "ูุจ ุจูุณุชุงุดูู", "ุชูุฑุชุฉ ูุงูุฌุง", "ุฃุฏุฎู ุตูู ุฌุฏูุฏ"
];

const InventoryPage = () => {
  const { branchId } = useParams();          // barka ุฃู qwesna
  const navigate     = useNavigate();
  const branchName   = BRANCH_NAMES[branchId] || "ูุฑุน ุบูุฑ ูุนุฑูู";

  /* Collections */
  const inventoryCol = collection(db, `${branchId}_inventory`);
  const itemsCol     = collection(db, "items");

  /* state */
  const [productList, setProductList] = useState(BASE_PRODUCTS);
  const [inventory,   setInventory]   = useState([]);
  const [formData, setFormData]       = useState({
    product: "", quantity: "", unit: "ุนุฏุฏ", note: "",
  });
  const [editId, setEditId]       = useState(null);
  const [searchTerm, setSearchTerm] = useState("");

  /* ุชุญููู ุงูุฃุตูุงู ุงููุดุชุฑูุฉ ูู Firestore */
  useEffect(() => {
    const unsub = onSnapshot(itemsCol, (snap) => {
      const extra = snap.docs.map((d) => d.id);
      setProductList(
        [...BASE_PRODUCTS, ...extra]
          .filter((v, i, arr) => arr.indexOf(v) === i)   // unique
          .sort()
      );
    });
    return () => unsub();
  }, []);

  /* ุชุญููู ุงูุฌุฑุฏ ูุญุธููุง (ูููโฏ1 ุซูโฏ2 ุซูโฏ3โฆ) */
  useEffect(() => {
    const q = query(inventoryCol, orderBy("date", "asc"));   // โญ๏ธ ุงูุชุฑุชูุจ ุงูุชุตุงุนุฏู
    const unsub = onSnapshot(q, (snap) => {
      setInventory(snap.docs.map((d) => ({ id: d.id, ...d.data() })));
    });
    return () => unsub();
  }, []);

  /* ุงุฎุชูุงุฑ ุตูู (ูุน ุฅุถุงูุฉ) */
  const handleProductSelect = async (val) => {
    if (val === "__new") {
      const newProd = prompt("ุงูุชุจ ุงุณู ุงูุตูู ุงูุฌุฏูุฏ:");
      if (newProd) {
        await setDoc(doc(db, "items", newProd), { createdAt: Date.now() });
        setFormData({ ...formData, product: newProd });
      }
    } else {
      setFormData({ ...formData, product: val });
    }
  };

  /* ุฅุถุงูุฉ/ุชุญุฏูุซ ุตูู ูุฎุฒูู */
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!formData.product || !formData.quantity) return;

    const rec = {
      ...formData,
      quantity: parseInt(formData.quantity),
      date: new Date().toLocaleDateString("fr-CA"), // YYYYโMMโDD
      updated: Boolean(editId),
    };

    if (editId) {
      await updateDoc(doc(db, `${branchId}_inventory`, editId), rec);
      setEditId(null);
    } else {
      await addDoc(inventoryCol, rec);
    }
    setFormData({ product: "", quantity: "", unit: "ุนุฏุฏ", note: "" });
  };

  /* ุงูุชุนุฏูู */
  const handleEdit = (item) => {
    setFormData({
      product: item.product,
      quantity: item.quantity,
      unit: item.unit || "ุนุฏุฏ",
      note: item.note || "",
    });
    setEditId(item.id);
  };

  /* ุงูุญุฐู */
  const handleDelete = async (id) => {
    const pwd = prompt("ุงุฏุฎู ูููุฉ ุงูุณุฑ ูุญุฐู ุงูุตูู:");
    if (!PASS.includes(pwd)) return alert("ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ");
    await deleteDoc(doc(db, `${branchId}_inventory`, id));
  };

  /* ููุชุฑุฉ */
  const filtered = inventory.filter(
    (it) =>
      it.product.includes(searchTerm) ||
      it.date.includes(searchTerm.trim())
  );

  /* ---------------- JSX ---------------- */
  return (
    <div className="factory-page" dir="rtl">
      <button className="back-btn" onClick={() => navigate(-1)}>โฌ ุฑุฌูุน</button>
      <h2 className="page-title">๐ ุฌุฑุฏ ุงููุญู - ูุฑุน {branchName}</h2>

      {/* ูููุฐุฌ ุงูุฅุฏุฎุงู */}
      <form onSubmit={handleSubmit} className="form-section">
        <div className="form-row">
          <select
            value={formData.product}
            onChange={(e) => handleProductSelect(e.target.value)}
            required
          >
            <option value="">ุงุฎุชุฑ ุงูุตูู</option>
            {[...productList, "__new"].map((p) => (
              <option key={p} value={p}>
                {p === "__new" ? "โ ุฅุถุงูุฉ ุตูู ุฌุฏูุฏโฆ" : p}
              </option>
            ))}
          </select>

          <input
            type="number"
            placeholder="ุงููููุฉ"
            value={formData.quantity}
            onChange={(e) =>
              setFormData({ ...formData, quantity: e.target.value })
            }
            required
          />

          <select
            value={formData.unit}
            onChange={(e) =>
              setFormData({ ...formData, unit: e.target.value })
            }
          >
            <option>ุนุฏุฏ</option>
            <option>ุณูุฑููุฒ</option>
            <option>ุจุฑูููุฉ</option>
            <option>ูููู</option>
            <option>ุตุงุฌ</option>
          </select>

          <input
            type="text"
            placeholder="ุจูุงู / ููุงุญุธุงุช"
            value={formData.note}
            onChange={(e) => setFormData({ ...formData, note: e.target.value })}
          />
        </div>
        <button type="submit">{editId ? "ุชุญุฏูุซ" : "ุชุณุฌูู"}</button>
      </form>

      {/* ุงูุจุญุซ */}
      <input
        className="search"
        placeholder="๐ ุงุจุญุซ ุจุงุณู ุงูุตูู ุฃู ุงูุชุงุฑูุฎ"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />

      {/* ุงูุฌุฏูู */}
      <table className="styled-table">
        <thead>
          <tr>
            <th>ุงูุชุงุฑูุฎ</th>
            <th>ุงูุตูู</th>
            <th>ุงููููุฉ</th>
            <th>ุงููุญุฏุฉ</th>
            <th>ุงูุจูุงู</th>
            <th>ุฅุฌุฑุงุกุงุช</th>
          </tr>
        </thead>
        <tbody>
          {filtered.length === 0 ? (
            <tr>
              <td colSpan="6">ูุง ุชูุฌุฏ ุจูุงูุงุช.</td>
            </tr>
          ) : (
            filtered.map((it) => (
              <tr
                key={it.id}
                style={{
                  backgroundColor: it.updated ? "#d0ebff" : "transparent",
                }}
              >
                <td>{it.date}</td>
                <td>{it.product}</td>
                <td>{it.quantity}</td>
                <td>{it.unit}</td>
                <td>{it.note || "-"}</td>
                <td>
                  <button onClick={() => handleEdit(it)}>โ๏ธ</button>{" "}
                  <button onClick={() => handleDelete(it.id)}>๐๏ธ</button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
};

export default InventoryPage;
